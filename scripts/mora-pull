#!/usr/bin/env python

# Download all MORA modules and/or pull the most recent changes from 
# their repositories. Default workspace is the parent dir of mora-base path.
#  Usage:
#   mora-pull --all  # Use on bootstrap: download all known pkgs (see distro file)
#   mora-pull        # Synch (update/pull) changes of all known pkgs (see distro file)
#
# Part of OpenMora - https://github.com/OpenMORA

import os
import sys
import string
import subprocess
import morautils
import argparse
import pprint

#------   MAIN   -------
def main():
	parser = argparse.ArgumentParser(description='Download OpenMORA pkgs.')
	parser.add_argument(
		"--all", 
		help="synch all existing pkgs, not only those found in disk",
		action='store_true')
	args = parser.parse_args()
	if args.all:
		print("# Downloading *all* OpenMORA pkgs.")

	# Locate the mora-base pkg, which contains the distro file:
	pkgs_root = morautils.get_pkgs_root()
	print("Using MORA root dir: " + pkgs_root)

	# Get distro info:
	distro = morautils.read_distro_file()

	# Go thru all pkgs:
	final_msgs=[]
	nPkgs = len(distro)
	for pkg_idx, pkg in enumerate(distro):
		print("# Processing pkg: " + pkg)
		sPkgDir = os.path.normpath( pkgs_root+"/"+pkg )
		try:
			if not os.path.exists(sPkgDir):
				# Non existing path ----------------------
				if not args.all:
					final_msgs.append("* %s not found, skipping (rerun with --all to download it)" % pkg)
				else:
					print("  * Pkg not found, will clone it now (--all flag)")
					# Git clone:
					git_url = distro[pkg]["git-url"]
					print("  * Cloning from: " + git_url )
					git_args = ["git", "clone",git_url,sPkgDir]
					print("  * Invoking: %s" % ' '.join(map(str, git_args)))
					if 0!=subprocess.call(git_args):
						print("** ERROR** Last command failed!!")
			else:
				# Already existing path ----------------------
				#print("  * Pulling updates...")
				# Git pull:
				os.chdir(sPkgDir)
				git_args = ["git", "pull"]
				#print("  * Invoking: %s" % ' '.join(map(str, git_args)))
				if 0!=subprocess.call(git_args):
					print("** ERROR** Last command failed!!")

			# Process optional flag "git-version"
			if 'git-version' in distro[pkg]:
				os.chdir(sPkgDir)
				sGitBranch = distro[pkg]['git-version']
				#print("  * Checking out '%s'" % sGitBranch)
				git_args = ["git", "checkout",sGitBranch]
				print("  * Invoking: %s" % ' '.join(map(str, git_args)))
				if 0!=subprocess.call(git_args):
					print("** ERROR** Last command failed!!")
		except Exception as e:
			print("(ERROR: ",type(e),"): ", e)
		morautils.progress(100.0*(pkg_idx+1.0)/(nPkgs))
		print("")
		
	if (len(final_msgs)>0):
		print("----------------------------------------------------------")
		print("|            Messages generated during update:           |")
		print("----------------------------------------------------------")
		for s in final_msgs:
			print(s)
		print("")

if __name__ == "__main__":
	sys.exit(main())

